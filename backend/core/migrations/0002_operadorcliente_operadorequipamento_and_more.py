# Generated by Django 5.2.4 on 2025-10-18 12:33

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cadastro', '0002_alter_cliente_documento'),
        ('core', '0001_initial'),
        ('equipamentos', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OperadorCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_vinculo', models.DateField(auto_now_add=True, verbose_name='Data de Vínculo')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
            ],
            options={
                'verbose_name': 'Vínculo Operador-Cliente',
                'verbose_name_plural': 'Vínculos Operador-Cliente',
                'ordering': ['-data_vinculo'],
            },
        ),
        migrations.CreateModel(
            name='OperadorEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_autorizacao', models.DateField(auto_now_add=True, verbose_name='Data de Autorização')),
                ('data_validade', models.DateField(blank=True, help_text='Deixe em branco para autorização permanente', null=True, verbose_name='Válido até')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Autorização de Equipamento',
                'verbose_name_plural': 'Autorizações de Equipamentos',
                'ordering': ['-data_autorizacao'],
            },
        ),
        migrations.AlterModelOptions(
            name='auditlog',
            options={'ordering': ['-created_at'], 'verbose_name': 'Log de Auditoria', 'verbose_name_plural': 'Logs de Auditoria'},
        ),
        migrations.AlterModelOptions(
            name='operador',
            options={'ordering': ['nome_completo'], 'verbose_name': 'Operador', 'verbose_name_plural': 'Operadores'},
        ),
        migrations.AlterModelOptions(
            name='supervisor',
            options={'ordering': ['nome_completo'], 'verbose_name': 'Supervisor', 'verbose_name_plural': 'Supervisores'},
        ),
        migrations.AddField(
            model_name='operador',
            name='atualizado_em',
            field=models.DateTimeField(auto_now=True, verbose_name='Atualizado em'),
        ),
        migrations.AddField(
            model_name='operador',
            name='bairro',
            field=models.CharField(blank=True, max_length=100, verbose_name='Bairro'),
        ),
        migrations.AddField(
            model_name='operador',
            name='cep',
            field=models.CharField(blank=True, max_length=9, verbose_name='CEP'),
        ),
        migrations.AddField(
            model_name='operador',
            name='cidade',
            field=models.CharField(blank=True, max_length=100, verbose_name='Cidade'),
        ),
        migrations.AddField(
            model_name='operador',
            name='codigo_valido_ate',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Código válido até'),
        ),
        migrations.AddField(
            model_name='operador',
            name='codigo_vinculacao',
            field=models.CharField(blank=True, help_text='Código de 8 dígitos para vincular Telegram', max_length=8, null=True, unique=True, verbose_name='Código de Vinculação'),
        ),
        migrations.AddField(
            model_name='operador',
            name='complemento',
            field=models.CharField(blank=True, max_length=100, verbose_name='Complemento'),
        ),
        migrations.AddField(
            model_name='operador',
            name='cpf',
            field=models.CharField(default='000.000.000-00', help_text='Formato: 000.000.000-00', max_length=14, unique=True, verbose_name='CPF'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='operador',
            name='criado_em',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Criado em'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='operador',
            name='criado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operadores_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por'),
        ),
        migrations.AddField(
            model_name='operador',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='E-mail'),
        ),
        migrations.AddField(
            model_name='operador',
            name='foto',
            field=models.ImageField(blank=True, null=True, upload_to='operadores/%Y/%m/', verbose_name='Foto'),
        ),
        migrations.AddField(
            model_name='operador',
            name='logradouro',
            field=models.CharField(blank=True, max_length=255, verbose_name='Logradouro'),
        ),
        migrations.AddField(
            model_name='operador',
            name='numero',
            field=models.CharField(blank=True, max_length=20, verbose_name='Número'),
        ),
        migrations.AddField(
            model_name='operador',
            name='telefone',
            field=models.CharField(blank=True, help_text='Formato: (00) 00000-0000', max_length=20, verbose_name='Telefone'),
        ),
        migrations.AddField(
            model_name='operador',
            name='telegram_username',
            field=models.CharField(blank=True, help_text='@username do operador no Telegram', max_length=100, verbose_name='Username do Telegram'),
        ),
        migrations.AddField(
            model_name='operador',
            name='telegram_vinculado_em',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Data de vinculação do Telegram'),
        ),
        migrations.AddField(
            model_name='operador',
            name='uf',
            field=models.CharField(blank=True, max_length=2, verbose_name='UF'),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='atualizado_em',
            field=models.DateTimeField(auto_now=True, verbose_name='Atualizado em'),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='clientes',
            field=models.ManyToManyField(blank=True, related_name='supervisores', to='cadastro.cliente', verbose_name='Clientes'),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='codigo_valido_ate',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Código válido até'),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='codigo_vinculacao',
            field=models.CharField(blank=True, max_length=8, null=True, unique=True, verbose_name='Código de Vinculação'),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='cpf',
            field=models.CharField(default='000.000.000-00', help_text='Formato: 000.000.000-00', max_length=14, unique=True, verbose_name='CPF'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='supervisor',
            name='criado_em',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Criado em'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='supervisor',
            name='criado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervisores_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por'),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='E-mail'),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='foto',
            field=models.ImageField(blank=True, null=True, upload_to='supervisores/%Y/%m/', verbose_name='Foto'),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='operadores_supervisionados',
            field=models.ManyToManyField(blank=True, related_name='supervisores', to='core.operador', verbose_name='Operadores Supervisionados'),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='telefone',
            field=models.CharField(blank=True, max_length=20, verbose_name='Telefone'),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='telegram_username',
            field=models.CharField(blank=True, max_length=100, verbose_name='Username do Telegram'),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='telegram_vinculado_em',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Data de vinculação do Telegram'),
        ),
        migrations.AlterField(
            model_name='operador',
            name='ativo',
            field=models.BooleanField(default=True, verbose_name='Ativo'),
        ),
        migrations.AlterField(
            model_name='operador',
            name='data_nascimento',
            field=models.DateField(verbose_name='Data de Nascimento'),
        ),
        migrations.AlterField(
            model_name='operador',
            name='nome_completo',
            field=models.CharField(max_length=200, verbose_name='Nome Completo'),
        ),
        migrations.AlterField(
            model_name='operador',
            name='telegram_chat_id',
            field=models.CharField(blank=True, help_text='ID único do chat do Telegram', max_length=50, null=True, unique=True, verbose_name='Telegram Chat ID'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='role',
            field=models.CharField(choices=[('ADMIN', 'Administrador'), ('SUPERVISOR', 'Supervisor'), ('OPERADOR', 'Operador'), ('TECNICO', 'Técnico'), ('FINANCEIRO', 'Financeiro'), ('COMPRAS', 'Compras')], default='ADMIN', max_length=20),
        ),
        migrations.AlterField(
            model_name='supervisor',
            name='ativo',
            field=models.BooleanField(default=True, verbose_name='Ativo'),
        ),
        migrations.AlterField(
            model_name='supervisor',
            name='data_nascimento',
            field=models.DateField(verbose_name='Data de Nascimento'),
        ),
        migrations.AlterField(
            model_name='supervisor',
            name='nome_completo',
            field=models.CharField(max_length=200, verbose_name='Nome Completo'),
        ),
        migrations.AlterField(
            model_name='supervisor',
            name='telegram_chat_id',
            field=models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Telegram Chat ID'),
        ),
        migrations.AddIndex(
            model_name='supervisor',
            index=models.Index(fields=['cpf'], name='core_superv_cpf_e62a1b_idx'),
        ),
        migrations.AddIndex(
            model_name='supervisor',
            index=models.Index(fields=['telegram_chat_id'], name='core_superv_telegra_9c0514_idx'),
        ),
        migrations.AddField(
            model_name='operadorcliente',
            name='cliente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vinculos_operadores', to='cadastro.cliente', verbose_name='Cliente'),
        ),
        migrations.AddField(
            model_name='operadorcliente',
            name='operador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vinculos_clientes', to='core.operador', verbose_name='Operador'),
        ),
        migrations.AddField(
            model_name='operadorcliente',
            name='vinculado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vinculos_operador_cliente_criados', to=settings.AUTH_USER_MODEL, verbose_name='Vinculado por'),
        ),
        migrations.AddField(
            model_name='operador',
            name='clientes',
            field=models.ManyToManyField(related_name='operadores', through='core.OperadorCliente', to='cadastro.cliente', verbose_name='Clientes'),
        ),
        migrations.AddField(
            model_name='operadorequipamento',
            name='autorizado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='autorizacoes_concedidas', to=settings.AUTH_USER_MODEL, verbose_name='Autorizado por'),
        ),
        migrations.AddField(
            model_name='operadorequipamento',
            name='equipamento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autorizacoes_operadores', to='equipamentos.equipamento', verbose_name='Equipamento'),
        ),
        migrations.AddField(
            model_name='operadorequipamento',
            name='operador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autorizacoes_equipamentos', to='core.operador', verbose_name='Operador'),
        ),
        migrations.AddField(
            model_name='operador',
            name='equipamentos_autorizados',
            field=models.ManyToManyField(blank=True, related_name='operadores_autorizados', through='core.OperadorEquipamento', to='equipamentos.equipamento', verbose_name='Equipamentos Autorizados'),
        ),
        migrations.AddIndex(
            model_name='operador',
            index=models.Index(fields=['cpf'], name='core_operad_cpf_f9c944_idx'),
        ),
        migrations.AddIndex(
            model_name='operador',
            index=models.Index(fields=['telegram_chat_id'], name='core_operad_telegra_3fbe96_idx'),
        ),
        migrations.AddIndex(
            model_name='operador',
            index=models.Index(fields=['codigo_vinculacao'], name='core_operad_codigo__3f5fd0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='operadorcliente',
            unique_together={('operador', 'cliente')},
        ),
        migrations.AlterUniqueTogether(
            name='operadorequipamento',
            unique_together={('operador', 'equipamento')},
        ),
    ]
